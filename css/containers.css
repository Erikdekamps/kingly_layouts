/*
* @file
* Provides container type styles for Kingly Layouts using logical properties.
*
* These classes handle the "full bleed" effect and communicate the necessary
* alignment padding to base.css via a CSS variable.
  */

/* Common full-bleed margin calculation for container types that break out */
/* of the main site wrapper. */
.kl--full,
.kl--edge-to-edge,
.kl--hero {
  /* Use logical properties for automatic RTL support. */
  margin-inline-start: calc(50% - 50vw);
  margin-inline-end: calc(50% - 50vw);
  box-sizing: border-box;
}

/*
* For "Full Width (Background Only)", we set the special alignment variable.
* The base.css file consumes this variable to calculate the final padding,
* ensuring the content aligns correctly while respecting user-added spacing.
* This calculation effectively makes the padding on each side equal to the
* empty space between the site's main container and the viewport edge.
  */
.kl--full {
  --kl-full-width-alignment-padding: calc(50vw - 50%);
}

/*
* For "Edge to Edge", we do not need to set the alignment variable, as it
* defaults to 0. Content will go to the edge of the viewport unless the
* user adds padding via the spacing utilities.
  */

/*
* The "Hero" container type is a special case that fills the viewport.
  */
.kl--hero {
  min-height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
  /* Apply default padding, which can be overridden by spacing utilities. */
  --kl-padding-inline: var(--kl-spacing-md);
  --kl-padding-block-start: var(--kl-spacing-md);
  --kl-padding-block-end: var(--kl-spacing-md);
}

/*
* A helper to constrain the direct content within a hero section, preventing
* text lines from becoming too long on very wide screens.
  */
.kl--hero > .layout__region {
  max-width: 1200px; /* This value can be adjusted as needed. */
  width: 100%;
}
