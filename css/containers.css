/*
 * @file
 * Provides container type styles for Kingly Layouts using logical properties.
 */

/*
 * Note: The base .kl class now applies padding from variables. These classes
 * add the special full-bleed margin logic.
 */
.kl--full,
.kl--edge-to-edge {
  /* Use logical properties for automatic RTL support. */
  margin-inline-start: calc(50% - 50vw);
  margin-inline-end: calc(50% - 50vw);
  box-sizing: border-box;
}

/*
 * For "Full Width (Background Only)", we add padding to push the inner content
 * back into alignment with the site's main container.
 * The padding applied here is *in addition to* any user-selected padding from
 * the spacing utilities.
 */
.kl--full {
  padding-inline-start: calc(max(0px, 50vw - 50%) + var(--kl-padding-inline));
  padding-inline-end: calc(max(0px, 50vw - 50%) + var(--kl-padding-inline));
}

/*
 * For "Edge to Edge", we do not add any extra padding, allowing the content to
 * truly go to the edge of the viewport. The user can still add their own
- * padding via the spacing utilities if desired.
+ * padding via the spacing utilities if desired. The base .kl class handles this.
 */

.kl--hero {
  min-height: 100vh;
  width: 100vw;
  margin-inline-start: calc(50% - 50vw);
  margin-inline-end: calc(50% - 50vw);
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  /* Apply default padding, which can be overridden by spacing utilities. */
  --kl-padding-inline: var(--kl-spacing-md);
  --kl-padding-block-start: var(--kl-spacing-md);
  --kl-padding-block-end: var(--kl-spacing-md);
}

.kl--hero > .layout__region {
  max-width: 1200px; /* Example max width, adjust as needed */
  width: 100%;
}
