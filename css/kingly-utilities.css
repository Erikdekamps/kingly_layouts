/*
 * @file
 * Provides utility styles for Kingly Layouts.
 */

/* --- CSS Variables --- */
:root {
  /* Spacing Scale */
  --kingly-spacing-xs: 0.25rem;
  --kingly-spacing-sm: 0.5rem;
  --kingly-spacing-md: 1rem;
  --kingly-spacing-lg: 2rem;
  --kingly-spacing-xl: 4rem;
  /* Border Radius Scale */
  --kingly-border-radius-xs: 0.25rem;
  --kingly-border-radius-sm: 0.5rem;
  --kingly-border-radius-md: 1rem;
  --kingly-border-radius-lg: 2rem;
  --kingly-border-radius-xl: 4rem;
  --kingly-border-radius-full: 9999px; /* Large value for pill/circle effect */
  /* Border Width Scale */
  --kingly-border-width-sm: 1px;
  --kingly-border-width-md: 2px;
  --kingly-border-width-lg: 4px;
  /* Breakpoints (adjust to match your theme's actual breakpoints) */
  --kingly-breakpoint-mobile-max: 767px;
  --kingly-breakpoint-tablet-min: 768px;
  --kingly-breakpoint-tablet-max: 1023px;
  --kingly-breakpoint-desktop-min: 1024px;
  /* Shadow Colors (example, could be more granular if needed) */
  --kingly-shadow-color-light: rgba(0, 0, 0, 0.05);
  --kingly-shadow-color-medium: rgba(0, 0, 0, 0.1);
  --kingly-shadow-color-dark: rgba(0, 0, 0, 0.06);
  --kingly-shadow-color-xl-dark: rgba(0, 0, 0, 0.04);
}

/* --- Container Types --- */

/* Common full-bleed styles for both container types */
.kingly-layout--full-width,
.kingly-layout--edge-to-edge {
  /* 1. Pull the container out to the viewport edges. */
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  box-sizing: border-box; /* Crucial for padding calculations */
}

/*
 * For "Full Width (Background Only)", we also push the inner content back
 * to the original container alignment.
 */
.kingly-layout--full-width {
  /* 2. Push the inner content back to the original container alignment. */
  padding-left: calc(50vw - 50%);
  padding-right: calc(50vw - 50%);
}

.kingly-layout--hero {
  /* Basic full-screen styles.  You'll likely want to customize this further. */
  min-height: 100vh; /* This will now be the default from CSS */
  width: 100vw;      /* This will now be the default from CSS */
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--kingly-spacing-md);
}

/* If you want to ensure content within the hero doesn't get too wide */
.kingly-layout--hero > .layout__region {
  max-width: 1200px; /* Example max width, adjust as needed */
  width: 100%;
}

/* --- Spacing Utilities (Padding & Margin) --- */

/* Padding X */
.kingly-layout-padding-x-xs {
  padding-left: var(--kingly-spacing-xs);
  padding-right: var(--kingly-spacing-xs);
}
.kingly-layout-padding-x-sm {
  padding-left: var(--kingly-spacing-sm);
  padding-right: var(--kingly-spacing-sm);
}
.kingly-layout-padding-x-md {
  padding-left: var(--kingly-spacing-md);
  padding-right: var(--kingly-spacing-md);
}
.kingly-layout-padding-x-lg {
  padding-left: var(--kingly-spacing-lg);
  padding-right: var(--kingly-spacing-lg);
}
.kingly-layout-padding-x-xl {
  padding-left: var(--kingly-spacing-xl);
  padding-right: var(--kingly-spacing-xl);
}

/* Padding Y */
.kingly-layout-padding-y-xs {
  padding-top: var(--kingly-spacing-xs);
  padding-bottom: var(--kingly-spacing-xs);
}
.kingly-layout-padding-y-sm {
  padding-top: var(--kingly-spacing-sm);
  padding-bottom: var(--kingly-spacing-sm);
}
.kingly-layout-padding-y-md {
  padding-top: var(--kingly-spacing-md);
  padding-bottom: var(--kingly-spacing-md);
}
.kingly-layout-padding-y-lg {
  padding-top: var(--kingly-spacing-lg);
  padding-bottom: var(--kingly-spacing-lg);
}
.kingly-layout-padding-y-xl {
  padding-top: var(--kingly-spacing-xl);
  padding-bottom: var(--kingly-spacing-xl);
}

/* Gap (for flex/grid containers) */
.kingly-layout-gap-xs {
  gap: var(--kingly-spacing-xs);
}
.kingly-layout-gap-sm {
  gap: var(--kingly-spacing-sm);
}
.kingly-layout-gap-md {
  gap: var(--kingly-spacing-md);
}
.kingly-layout-gap-lg {
  gap: var(--kingly-spacing-lg);
}
.kingly-layout-gap-xl {
  gap: var(--kingly-spacing-xl);
}

/* Margin X */
.kingly-layout-margin-x-xs {
  margin-left: var(--kingly-spacing-xs);
  margin-right: var(--kingly-spacing-xs);
}
.kingly-layout-margin-x-sm {
  margin-left: var(--kingly-spacing-sm);
  margin-right: var(--kingly-spacing-sm);
}
.kingly-layout-margin-x-md {
  margin-left: var(--kingly-spacing-md);
  margin-right: var(--kingly-spacing-md);
}
.kingly-layout-margin-x-lg {
  margin-left: var(--kingly-spacing-lg);
  margin-right: var(--kingly-spacing-lg);
}
.kingly-layout-margin-x-xl {
  margin-left: var(--kingly-spacing-xl);
  margin-right: var(--kingly-spacing-xl);
}

/* Margin Y */
.kingly-layout-margin-y-xs {
  margin-top: var(--kingly-spacing-xs);
  margin-bottom: var(--kingly-spacing-xs);
}
.kingly-layout-margin-y-sm {
  margin-top: var(--kingly-spacing-sm);
  margin-bottom: var(--kingly-spacing-sm);
}
.kingly-layout-margin-y-md {
  margin-top: var(--kingly-spacing-md);
  margin-bottom: var(--kingly-spacing-md);
}
.kingly-layout-margin-y-lg {
  margin-top: var(--kingly-spacing-lg);
  margin-bottom: var(--kingly-spacing-lg);
}
.kingly-layout-margin-y-xl {
  margin-top: var(--kingly-spacing-xl);
  margin-bottom: var(--kingly-spacing-xl);
}

/* --- Border Utilities --- */

/* Border Radius */
.kingly-layout-border-radius-xs {
  border-radius: var(--kingly-border-radius-xs);
}
.kingly-layout-border-radius-sm {
  border-radius: var(--kingly-border-radius-sm);
}
.kingly-layout-border-radius-md {
  border-radius: var(--kingly-border-radius-md);
}
.kingly-layout-border-radius-lg {
  border-radius: var(--kingly-border-radius-lg);
}
.kingly-layout-border-radius-xl {
  border-radius: var(--kingly-border-radius-xl);
}
.kingly-layout-border-radius-full {
  border-radius: var(--kingly-border-radius-full);
}

/* Border Width */
.kingly-layout-border-width-sm {
  border-width: var(--kingly-border-width-sm);
}
.kingly-layout-border-width-md {
  border-width: var(--kingly-border-width-md);
}
.kingly-layout-border-width-lg {
  border-width: var(--kingly-border-width-lg);
}

/* Border Style */
.kingly-layout-border-style-solid {
  border-style: solid;
}
.kingly-layout-border-style-dashed {
  border-style: dashed;
}
.kingly-layout-border-style-dotted {
  border-style: dotted;
}

/* --- Alignment Utilities --- */

/*
 * These utilities require the layout container to be a flex or grid container.
 * They control the vertical alignment of items (regions) within the container.
 */
.kingly-layout-align-content-flex-start {
  align-content: flex-start;
}
.kingly-layout-align-content-center {
  align-content: center;
}
.kingly-layout-align-content-flex-end {
  align-content: flex-end;
}
.kingly-layout-align-content-stretch {
  align-content: stretch;
}
.kingly-layout-align-content-baseline {
  align-content: baseline;
}

/* --- Background Media Utilities --- */

/* Background Video Container */
.kingly-layout--has-bg-video {
  position: relative;
  overflow: hidden; /* Ensure video doesn't overflow */
  z-index: 0; /* Establish a new stacking context. */
}
.kingly-layout--has-bg-video > .kingly-layout__video-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -2; /* Place at the very back, behind the overlay. */
  pointer-events: none; /* Allow clicks to pass through to content */
  overflow: hidden;
}
.kingly-layout--has-bg-video > .kingly-layout__video-wrapper > .kingly-layout__video {
  min-width: 100%;
  min-height: 100%;
  width: auto;
  height: auto;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  object-fit: cover; /* Ensure video covers the area */
}

/* Background Overlay */
.kingly-layout--has-bg-overlay {
  position: relative; /* Ensure overlay is positioned relative to this */
  z-index: 0; /* Establish a new stacking context. */
}
.kingly-layout--has-bg-overlay > .kingly-layout__bg-overlay {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1; /* Place above video/image, but still behind content. */
  pointer-events: none; /* Allow clicks to pass through */
}

/* --- Shadows & Effects Utilities --- */

/* Box Shadow */
.kingly-layout-shadow-sm {
  box-shadow: 0 1px 2px 0 var(--kingly-shadow-color-light);
}
.kingly-layout-shadow-md {
  box-shadow: 0 4px 6px -1px var(--kingly-shadow-color-medium), 0 2px 4px -1px var(--kingly-shadow-color-dark);
}
.kingly-layout-shadow-lg {
  box-shadow: 0 10px 15px -3px var(--kingly-shadow-color-medium), 0 4px 6px -2px var(--kingly-shadow-color-light);
}
.kingly-layout-shadow-xl {
  box-shadow: 0 20px 25px -5px var(--kingly-shadow-color-medium), 0 10px 10px -5px var(--kingly-shadow-color-xl-dark);
}
.kingly-layout-shadow-inner {
  box-shadow: inset 0 2px 4px 0 var(--kingly-shadow-color-dark);
}

/* Filter */
.kingly-layout-filter-grayscale {
  filter: grayscale(100%);
}
.kingly-layout-filter-blur {
  filter: blur(5px); /* This value could also be a variable if you have a blur scale */
}
.kingly-layout-filter-sepia {
  filter: sepia(100%);
}
.kingly-layout-filter-brightness {
  filter: brightness(1.5); /* This value could also be a variable if you have a brightness scale */
}

/* --- Responsiveness Utilities --- */

/* Hide on Breakpoint */
/* Using common breakpoints, adjust as per theme's actual breakpoints */
@media (max-width: var(--kingly-breakpoint-mobile-max)) {
  /* Mobile */
  .kingly-layout-hide-on-mobile {
    display: none !important;
  }
}

@media (min-width: var(--kingly-breakpoint-tablet-min)) and (max-width: var(--kingly-breakpoint-tablet-max)) {
  /* Tablet */
  .kingly-layout-hide-on-tablet {
    display: none !important;
  }
}

@media (min-width: var(--kingly-breakpoint-desktop-min)) {
  /* Desktop */
  .kingly-layout-hide-on-desktop {
    display: none !important;
  }
}
