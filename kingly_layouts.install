<?php

/**
 * @file
 * Install, update, and uninstall functions for the Kingly Layouts module.
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\taxonomy\Entity\Vocabulary;

/**
 * Implements hook_install().
 *
 * This hook is fired when the module is first enabled.
 * It creates the vocabulary and default color terms.
 */
function kingly_layouts_install(): void {
  // First, ensure the vocabulary exists (create if config import failed).
  $vocabulary_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_vocabulary');
  $vocabulary = $vocabulary_storage->load('kingly_css_color');

  if (!$vocabulary) {
    // Create vocabulary programmatically if config import didn't work.
    $vocabulary = Vocabulary::create([
      'vid' => 'kingly_css_color',
      'name' => 'Kingly CSS Colors',
      'description' => 'Color vocabulary for Kingly Layouts module',
    ]);
    $vocabulary->save();
    \Drupal::logger('kingly_layouts')->notice('Created vocabulary kingly_css_color programmatically.');
  }

  // Ensure field storage and field instances exist.
  $field_storage_config = \Drupal::configFactory()->get('field.storage.taxonomy_term.field_kingly_css_color');
  if ($field_storage_config->isNew()) {
    \Drupal::service('config.installer')->installOptionalConfig();
  }

  // Define the default colors to add.
  $default_colors = [
    'Black' => '#000000',
    'White' => '#ffffff',
  ];

  // Load the term storage for the 'taxonomy_term' entity type.
  $term_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');

  // Iterate over the default colors.
  foreach ($default_colors as $name => $hex_code) {
    // Check if a term with this name already exists in the vocabulary.
    $existing_terms = $term_storage->loadByProperties([
      'name' => $name,
      'vid' => 'kingly_css_color',
    ]);

    // If no existing term is found, create a new one.
    if (empty($existing_terms)) {
      try {
        // Create a new taxonomy term entity.
        $term = Term::create([
          'name' => $name,
          'vid' => 'kingly_css_color',
          'field_kingly_css_color' => $hex_code,
        ]);

        // Save the new term.
        $term->save();
        \Drupal::logger('kingly_layouts')->info('Created term: @name with color @color', [
          '@name' => $name,
          '@color' => $hex_code,
        ]);
      }
      catch (\Exception $e) {
        \Drupal::logger('kingly_layouts')->error('Failed to create term @name: @error', [
          '@name' => $name,
          '@error' => $e->getMessage(),
        ]);
      }
    }
  }
}
